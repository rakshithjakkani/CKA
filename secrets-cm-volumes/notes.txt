secrets:-
    * Kubernetes secrets are used to store the secrets. which are then used by the pods
    * As per best practices, you can't directly pass your confidential information on pod configuration. so in kubernetes, we use the secrets
    * there are 2 ways that you can pass your secrets to pods, 1. via env variables 2. volumes
    * Below command to is used to create a secret with two key values pairs. we will use each key pair with different approach
    * k create secret generic rakshith --from-literal=env=prod --from-literal=app=nginx  -o yaml --dry-run=client > secret.yaml
    * k run rakshith --image nginx 
    Practicle:
        * k create secret generic rakshith --from-literal=env=prod --from-literal=app=nginx  -o yaml --dry-run=client > secret.yaml
            --> Above command will create a secret configuration file in your current directory which contains app and env secrets
            --> then go ahead and apply this file "kubectl apply -f secret.yaml"
        
        * k run <podName> --image nginx -o yaml --dry-run=client > pod.yaml
            --> This command will give you pod configuration file. make the changes as files are there in this directory    
            --> go ahead and apply "kubectl apply -f pod.yaml"

volumes:- 
    * There are multiple volumes supported by the kubernetes. as of now, we are going with the hostpath volume type
    * generally this volume is created on the underlaying hostpath
    * use pod-volumes.yaml configuration file for the practise. 
    * this volume is also mounted as same as secrets mounting. but we have to create volume. that we can do by specifying in pod yaml file
